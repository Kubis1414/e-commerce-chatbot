name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kódu
        uses: actions/checkout@v2

      - name: Nastavení Pythonu
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.12'

      - name: Instalace závislostí
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Nastavení Google credentials
        run: echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' > google-credentials.json

      - name: Spuštění testů
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_APPLICATION_CREDENTIALS: google-credentials.json

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    env:
      RELEASE_DIR_BASE: ~/chat_releases
    steps:
      - name: Checkout kódu
        uses: actions/checkout@v2
      - name: Přidání host key serveru do known_hosts
        run: |
          mkdir -p ~/.ssh
          echo ${{ secrets.SERVER_KNOWN_HOSTS }} > ~/.ssh/known_hosts
      - name: Přidání SSH klíče
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Get current
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H-%M-%S')"
      - name: Get current date
        run: echo "DATE=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV
      - name: Nasazení kódu pomocí rsync
        run: |
          ssh -o StrictHostKeyChecking=yes -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "mkdir -p $DEPLOY_DIR"
          rsync -avz --delete --exclude='.git' ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:$DEPLOY_DIR

          echo "Zapisuji .env soubor"
          echo "${{ secrets.ENV_VARS }}" > .env

          echo "Zapisuji google-credentials.json soubor"
          echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' > google-credentials.json

          echo "Vytvářím virtuální prostředí, pokud neexistuje"
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi

          echo "Aktivuji virtuální prostředí a instaluji dependencies"
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

          echo "Deaktivuji virtuální prostředí"
          deactivate
        env:
          DEPLOY_DIR: ${{ env.RELEASE_DIR_BASE }}/release-${{ env.DATE }}
      - name: Pre-deploy testy na serveru
        run: |
          ssh -o StrictHostKeyChecking=yes -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} <<EOF

          echo "Přepínám do deployment directory: $DEPLOY_DIR"
          cd $DEPLOY_DIR

          echo "Zapisuji .env soubor"
          echo "${{ secrets.ENV_VARS }}" > .env

          echo "Aktivuji virtuální prostředí pro testy"
          source venv/bin/activate

          echo "Spouštím testy v pre-produkčním prostředí"
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_APPLICATION_CREDENTIALS: google-credentials.json
          DEPLOY_DIR: ${{ env.RELEASE_DIR_BASE }}/release-${{ env.DATE }}
      - name: Přepojení symlinku a restart produkce
        if: success()
        run: |
          ssh -o StrictHostKeyChecking=yes -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} <<EOF
          set -e

          echo "Přepínám symbolický link current na nový release..."
          if [ -L ~/chat_releases/current ]; then
            echo "Aktuální 'current' symlink existuje. Odstraňuji ho..."
            rm ~/chat_releases/current
          else
            echo "Aktuální 'current' symlink NEEXISTUJE."
          fi

          echo "Vytvářím nový symlink '~/chat_releases/current' -> '$DEPLOY_DIR'"
          ln -s $DEPLOY_DIR ~/chat_releases/current

          echo "Restartuji systemd service ecommerce_chatbot.service"
          nohup sudo systemctl restart ecommerce_chatbot.service > /dev/null 2>&1 &

          echo "Dokončeno přepnutí 'current' symlink na nový release v '$DEPLOY_DIR', 'current' nyní ukazuje na '~/chat_releases/current'"

          EOF
        env:
          DEPLOY_DIR: ${{ env.RELEASE_DIR_BASE }}/release-${{ env.DATE }}
      - name: Úklid starých releases
        run: |
          ssh -o StrictHostKeyChecking=yes -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} <<EOF
          set -e

          echo "Spouštím úklid starých releases, ponechávám 3 nejnovější releasy"
          ls -d ~/chat_releases/release-* | sort -r | tail -n +4 | xargs rm -rf

          EOF

        env:
          DEPLOY_DIR: ${{ env.RELEASE_DIR_BASE }}/release-${{ env.DATE }}
